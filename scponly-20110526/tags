!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALLOWABLE	scponly.h	14;"	d
BADARG	netbsd_getopt_long.c	53;"	d	file:
BADCH	netbsd_getopt_long.c	52;"	d	file:
CC	Makefile	/^CC		 = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS		 = -g -O2 -I$(srcdir) -I. -Wall -pedantic $/;"	m
CHROOTED_NAME	Makefile	/^CHROOTED_NAME   = $/;"	m
CHROOT_CHECKDIR	config.h	22;"	d
CONFDIR	Makefile	/^CONFDIR         = ${prefix}\/etc\/scponly$/;"	m
DEBUGFILE	Makefile	/^DEBUGFILE       = ${CONFDIR}\/debuglevel$/;"	m
DEFS	Makefile	/^DEFS		 = -DHAVE_CONFIG_H -DDEBUGFILE='"${DEBUGFILE}"'$/;"	m
EMSG	netbsd_getopt_long.c	57;"	d	file:
ENABLE_SFTP	config.h	17;"	d
ENABLE_WILDCARDS	config.h	19;"	d
GFTP_COMPAT	config.h	10;"	d
HAVE_GETOPT	config.h	25;"	d
HAVE_GETOPT_H	config.h	26;"	d
HAVE_GLOB	config.h	24;"	d
HAVE_WORDEXP	config.h	23;"	d
IDENTICAL_INTERPRETATION	netbsd_getopt_long.c	306;"	d	file:
IDENTICAL_INTERPRETATION	netbsd_getopt_long.c	441;"	d	file:
IGNORE_FIRST	netbsd_getopt_long.c	43;"	d	file:
INORDER	netbsd_getopt_long.c	55;"	d	file:
INSTALL	Makefile	/^INSTALL		 = \/usr\/bin\/install -c$/;"	m
IN_ORDER	netbsd_getopt_long.c	49;"	d	file:
IS_POSIXLY_CORRECT	netbsd_getopt_long.c	46;"	d	file:
LN_S	Makefile	/^LN_S		 = ln -s$/;"	m
LOGIDENT	scponly.h	17;"	d
MAX	helper.c	32;"	d	file:
MAX_ARGC	scponly.h	12;"	d
MAX_ENV	scponly.h	13;"	d
MAX_REQUEST	scponly.h	11;"	d
MAX_USERNAME	scponly.h	10;"	d
MIN	helper.c	33;"	d	file:
PACKAGE_BUGREPORT	config.h	4;"	d
PACKAGE_NAME	config.h	2;"	d
PACKAGE_VERSION	config.h	3;"	d
PERMUTE	netbsd_getopt_long.c	47;"	d	file:
PRINT_ERROR	netbsd_getopt_long.c	44;"	d	file:
PROG_CD	config.h	52;"	d
PROG_ECHO	config.h	67;"	d
PROG_GROUPS	config.h	65;"	d
PROG_ID	config.h	66;"	d
PROG_PWD	config.h	64;"	d
PROG_SFTP_SERVER	config.h	37;"	d
RESTRICTIVE_FILENAMES	config.h	20;"	d
RSYNC_ARG_EXECUTE	helper.c	29;"	d	file:
RSYNC_ARG_SERVER	helper.c	28;"	d	file:
USE_SAFE_ENVIRONMENT	config.h	59;"	d
USE_SAFE_ENVIRONMENT	config.h	79;"	d
WHITE	scponly.h	15;"	d
WINSCP_BOF	scponly.h	25;"	d
WINSCP_BOF_REQ	scponly.h	22;"	d
WINSCP_EOF	scponly.h	24;"	d
WINSCP_EOF_REQ_RETVAL	scponly.h	19;"	d
WINSCP_EOF_REQ_STATUS	scponly.h	21;"	d
WINSCP_EOF_REQ_ZERO	scponly.h	20;"	d
_DIAGASSERT	netbsd_getopt_long.c	60;"	d	file:
__UNCONST	netbsd_getopt_long.c	40;"	d	file:
__UNCONST	netbsd_getopt_long.c	41;"	d	file:
allowed_env_vars	scponly.c	/^char * allowed_env_vars[] =$/;"	v
ambig	netbsd_getopt_long.c	/^static const char ambig[] = "ambiguous option -- %.*s";$/;"	v	file:
argflag	scponly.h	/^	int argflag;$/;"	m	struct:__anon1
badarg	scponly.h	/^	char *badarg;$/;"	m	struct:__anon2
bindir	Makefile	/^bindir		 = ${exec_prefix}\/bin$/;"	m
build_arg_vector	helper.c	/^char **build_arg_vector(char *request)$/;"	f
check_dangerous_args	helper.c	/^int check_dangerous_args(char **av)$/;"	f
chrootdir	scponly.c	/^char chrootdir[FILENAME_MAX];$/;"	v
chrooted	scponly.c	/^int chrooted=0;$/;"	v
cmd_arg_t	scponly.h	/^} cmd_arg_t;$/;"	t	typeref:struct:__anon2
cmd_t	scponly.h	/^} cmd_t;$/;"	t	typeref:struct:__anon1
cntchr	helper.c	/^int cntchr(char *buf, char x)$/;"	f
commands	scponly.c	/^cmd_t commands[] =$/;"	v
dangerous_args	scponly.c	/^cmd_arg_t dangerous_args[] =$/;"	v
debug	scponly.c	/^void (*debug)(int priority, const char* format, ...);$/;"	v
debuglevel	scponly.c	/^int debuglevel=0;$/;"	v
discard_child_vectors	helper.c	/^void discard_child_vectors(char **av)$/;"	f
discard_vector	helper.c	/^void discard_vector(char **av)$/;"	f
empty_longopts	scponly.c	/^struct option empty_longopts[] = {$/;"	v	typeref:struct:option
exact_match	scponly.h	16;"	d
exec_prefix	Makefile	/^exec_prefix	 = ${prefix}$/;"	m
expand_wildcards	helper.c	/^char **expand_wildcards(char **av_old)$/;"	f
fail	build_extras/setup_chroot.sh.RH9	/^fail ( ) {$/;"	f
fail	build_extras/setup_chroot.sh.debian	/^fail ( ) {$/;"	f
fail	setup_chroot.sh	/^fail ( ) {$/;"	f
fail	setup_chroot.sh.in	/^fail ( ) {$/;"	f
filter_allowed_env_vars	helper.c	/^void filter_allowed_env_vars() {$/;"	f
find_stack_direction	configure	/^find_stack_direction ()$/;"	f
flag	scponly_getopt.h	/^   int        *flag;$/;"	m	struct:option
flatten_vector	helper.c	/^char *flatten_vector(char **av)$/;"	f
gcd	netbsd_getopt_long.c	/^gcd(int a, int b)$/;"	f	file:
get_uservar	helper.c	/^int get_uservar(void)$/;"	f
getopt_internal	netbsd_getopt_long.c	/^getopt_internal(int nargc, char **nargv, const char *options)$/;"	f	file:
getoptflag	scponly.h	/^	int  getoptflag;$/;"	m	struct:__anon2
getwd	build_extras/setup_chroot.sh.RH9	/^getwd ( ) {$/;"	f
getwd	build_extras/setup_chroot.sh.debian	/^getwd ( ) {$/;"	f
getwd	setup_chroot.sh	/^getwd ( ) {$/;"	f
getwd	setup_chroot.sh.in	/^getwd ( ) {$/;"	f
getyn	build_extras/setup_chroot.sh.RH9	/^getyn ( ) {$/;"	f
getyn	build_extras/setup_chroot.sh.debian	/^getyn ( ) {$/;"	f
getyn	setup_chroot.sh	/^getyn ( ) {$/;"	f
getyn	setup_chroot.sh.in	/^getyn ( ) {$/;"	f
has_arg	scponly_getopt.h	/^   int         has_arg;$/;"	m	struct:option
homedir	scponly.c	/^char homedir[FILENAME_MAX];$/;"	v
illoptchar	netbsd_getopt_long.c	/^static const char illoptchar[] = "unknown option -- %c";$/;"	v	file:
illoptstring	netbsd_getopt_long.c	/^static const char illoptstring[] = "unknown option -- %s";$/;"	v	file:
logstamp	helper.c	/^char *logstamp ()$/;"	f
longopts	scponly.h	/^	struct option *longopts;$/;"	m	struct:__anon2	typeref:struct:__anon2::option
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	groups.c	/^int main()$/;"	f
main	scponly.c	/^int main (int argc, char **argv) $/;"	f
mandir	Makefile	/^mandir		 = ${prefix}\/man$/;"	m
mysetenv	helper.c	/^int mysetenv(const char *name, const char *value) {$/;"	f
name	scponly.h	/^	char *name;$/;"	m	struct:__anon1
name	scponly.h	/^	char *name;$/;"	m	struct:__anon2
name	scponly_getopt.h	/^   const char *name;$/;"	m	struct:option
netbsd_getopt_long	netbsd_getopt_long.c	/^netbsd_getopt_long(int nargc, char * const *nargv, const char *options,$/;"	f
no_argument	scponly_getopt.h	2;"	d
noarg	netbsd_getopt_long.c	/^static const char noarg[] = "option doesn't take an argument -- %.*s";$/;"	v	file:
nonopt_end	netbsd_getopt_long.c	/^static int nonopt_end = -1;   \/* first option after non options (for permute) *\/$/;"	v	file:
nonopt_start	netbsd_getopt_long.c	/^static int nonopt_start = -1; \/* first non option argument (for permute) *\/$/;"	v	file:
noop_syslog	helper.c	/^void noop_syslog(int priority, const char* format, ...)$/;"	f
opterrmsg	netbsd_getopt_long.c	/^char opterrmsg[128];$/;"	v
option	scponly_getopt.h	/^typedef struct option$/;"	s
option	scponly_getopt.h	/^} option;$/;"	t	typeref:struct:option
optional_argument	scponly_getopt.h	4;"	d
optreset	netbsd_getopt_long.c	/^int     optreset;               \/* reset getopt *\/$/;"	v
opts	scponly.h	/^	char *opts;$/;"	m	struct:__anon2
permute_args	netbsd_getopt_long.c	/^permute_args(int panonopt_start, int panonopt_end, int opt_end, char **nargv)$/;"	f	file:
place	netbsd_getopt_long.c	/^static const char *place = EMSG; \/* option letter processing *\/$/;"	v	file:
prefix	Makefile	/^prefix		 = \/usr\/local$/;"	m
process_pre_chroot_request	scponly.c	/^int process_pre_chroot_request(char ** av) {$/;"	f
process_ssh_request	scponly.c	/^int process_ssh_request(char *request)$/;"	f
process_winscp_requests	scponly.c	/^int process_winscp_requests(void)$/;"	f
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
recargchar	netbsd_getopt_long.c	/^static const char recargchar[] = "option requires an argument -- %c";$/;"	v	file:
recargstring	netbsd_getopt_long.c	/^static const char recargstring[] = "option requires an argument -- %s";$/;"	v	file:
replace_env_entry	helper.c	/^int replace_env_entry(const char* name, const char* value) {$/;"	f
required_argument	scponly_getopt.h	3;"	d
rsync_longopts	scponly.c	/^struct option rsync_longopts[] = {$/;"	v	typeref:struct:option
safeenv	scponly.c	/^char *safeenv[MAX_ENV];$/;"	v
sbindir	Makefile	/^sbindir		 = ${exec_prefix}\/sbin$/;"	m
scponly_getopt_long	scponly.c	/^int (*scponly_getopt_long)($/;"	v
solaris_needs_strsep	helper.c	/^char* solaris_needs_strsep(char** str, char* delims)$/;"	f
srcdir	Makefile	/^srcdir		 = .$/;"	m
strbeg	helper.c	/^char *strbeg(char *big, char *small)$/;"	f
strend	helper.c	/^char *strend (char *big, char *small)$/;"	f
strict	scponly.h	/^	int  strict;$/;"	m	struct:__anon2
strip_vector	helper.c	/^char **strip_vector(char **sav)$/;"	f
substitute_known_path	helper.c	/^char *substitute_known_path(char *request)$/;"	f
svn_longopts	scponly.c	/^struct option svn_longopts[] = {$/;"	v	typeref:struct:option
svnserv_longopts	scponly.c	/^struct option svnserv_longopts[] = {$/;"	v	typeref:struct:option
username	scponly.c	/^char username[MAX_USERNAME];$/;"	v
val	scponly_getopt.h	/^   int         val;$/;"	m	struct:option
valid_arg_vector	helper.c	/^int valid_arg_vector(char **av)$/;"	f
valid_chars	helper.c	/^int valid_chars(char *string)$/;"	f
warnx	netbsd_getopt_long.c	/^static void warnx(int print_error, const char *fmt, ...)$/;"	f	file:
winscp_mode	scponly.c	/^int winscp_mode=0;$/;"	v
winscp_regular_request	scponly.c	/^int winscp_regular_request(char *request)$/;"	f
winscp_transit_request	scponly.c	/^int winscp_transit_request(char *request)$/;"	f
